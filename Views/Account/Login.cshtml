@model KickTask.Models.Extendet.AccountLogin
@using System.Globalization;
@{
    ViewBag.Title = "Login";
}
@ViewBag.Message
<div onload="CheckWayOfRequest">
    @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { id = "loginFormm" }))
    {
        @Html.AntiForgeryToken()
    <div class="modal-dialog" role="document" op id="myModal">
        
        <div class="modal-content" id="modalcontainer">           
            <div class=" modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="CloseModal()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h4 class="card-title mt-3 text-center">Sign In Account</h4>
                <p class="text-center">Sign in to your account</p>
                <div class="lds-ring" id="loaderr"><div></div><div></div><div></div><div></div></div>
                <div class="form-horizontal" id="registrationForm">
            @Html.ValidationSummary(true, "", new { @class = "text-danger errorLabel" })


            <div id="inputfeldgruppe">
                <div class="form-group input-group" id="inputfeld">
                    <div class="input-group-prepend">
                        <span class="input-group-text"> <i class="fa fa-envelope"></i> </span>
                    </div>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                </div>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger errorLabel" })
            </div>


            <div id="inputfeldgruppe">
                <div class="form-group input-group" id="inputfeld">
                    <div class="input-group-prepend">
                        <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
                    </div>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                </div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger errorLabel" })
                @Html.ValidationMessage("UserExists", new { @class = "text-danger errorLabel" })
            </div>

            <div id="inputfeldgruppe" style="margin:0px">
                @Html.CheckBox("RememberMe", false)
                <label class="form-check-label" for="gridRadios1">
                    <a>Remember</a>
                </label>
            </div>

            <div class="form-group input-group" style="margin-top:20px;">
                <input onclick="PostLogin()" value="Log In" class="btn btn-default" />
            </div>
        </div>
            </div>
        </div>
    </div>
    }
</div>