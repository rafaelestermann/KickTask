@model KickTask.Models.Account
@using System.Globalization;
@{
    ViewBag.Title = "Registration";    
}
<script>
    window.onload = function () {
        OpenMainAndModal();
    };
</script>

<div>
    @ViewBag.Message
    @using (Html.BeginForm("Registration", "Account",
       FormMethod.Post, new { id = "registrationFormm" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog" role="document" op id="myModal">
            <div class="modal-content" id="modalcontainer">
                <div class=" modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="CloseModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <h4 class="card-title mt-3 text-center">Create Account</h4>
                    <p class="text-center">Get started with your free account</p>
                    <div class="lds-ring" id="loaderr"><div></div><div></div><div></div><div></div></div>
                    <div class="form-horizontal" id="registrationForm">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })      

                        <div id="inputfeldgruppe">
                            <div class="form-group input-group" id="inputfeld">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"> <i class="fa fa-user"></i> </span>
                                </div>
                                @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control", placeholder = "Fullname" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger errorLabel" })
                        </div>

                        <div id="inputfeldgruppe">
                            <div class="form-group input-group" id="inputfeld">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"> <i class="fa fa-at"></i> </span>
                                </div>
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger errorLabel" })
                        </div>

                        <div id="inputfeldgruppe">
                            <div class="form-group input-group" id="inputfeld">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"> <i class="fa fa-envelope"></i> </span>
                                </div>
                                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("EmailExists", new { @class = "text-danger errorLabel" })
                        </div>

                        <div id="inputfeldgruppe">
                            <div class="form-group input-group" id="inputfeld">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
                                </div>
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger errorLabel" })
                        </div>

                        <div id="inputfeldgruppe">
                            <div class="form-group input-group" id="inputfeld">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
                                </div>
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger errorLabel" })
                        </div>

                        <div id="inputfeldgruppe" style="margin:0px">
                            @Html.CheckBox("AgreedPolicy", false)
                            <label class="form-check-label" for="gridRadios1">
                                <a><b>I understand and agree with the </b></a><a href="url">terms and conditions</a>
                            </label>
                        </div>
                        @Html.ValidationMessage("PolicyNotAgreed", new { @class = "text-danger errorLabel" })

                        <div class="form-group input-group" style="margin-top:20px;">
                            <input onclick="PostRegister()" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>


    }
</div>