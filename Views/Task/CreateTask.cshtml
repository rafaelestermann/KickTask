@model KickTask.Models.Task
@using KickTask.KickTask;
@using KickTask.Models;

@{
    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    ViewBag.Title = "CreateTask";
    Layout = "~/Views/Shared/LayoutLoggedIn.cshtml";
}

@{
    var dbHandler = new DatabaseHandler();
    List<Account> allAccounts = dbHandler.AccountRepository.GetAllAccounts();
}
<div id="page"></div>
<br />
<br />
<h2>CreateTask</h2>

@using (Html.BeginForm(null, null, new { @id = string.Empty }, FormMethod.Post,
new { @id = "CNform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Task</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Name*", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, "Description*", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, "Text*", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bis, "Bis*", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bis, "", new { @class = "text-danger" })
            </div>
        </div>     

        <div class="form-group">
            @Html.LabelFor(model => model.TaskAccount, "TaskAccount*", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.ListBoxFor(model => model.TaskAccountIDS, new MultiSelectList(allAccounts, "ID", "Fullname"), new { @class = "form-control" })
            @Html.ValidationMessage("AccountRequired", new { @class = "text-danger errorLabel" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('#example-getting-started').multiselect();
    });
</script>

<div>
    @Html.ActionLink("Back to List", "Tasks")
</div>
